{"version":3,"sources":["components/global/content/content.js","components/app/App.js","config/firebase.js","components/global/formLogin/formLogin.js","components/Login/index.js","components/global/nav/nav.js","components/menu/index.js","components/page404/index.js","routes.js","serviceWorker.js","index.js","components/assets/burguerB3.png","components/assets/burguer2.png"],"names":["Content","body","this","props","react_default","a","createElement","Component","PropTypes","object","isRequired","App","children","className","content","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initSesion","email","password","auth","signInWithEmailAndPassword","then","console","log","catch","error","errorCode","code","errorMessage","message","FormLogin","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","signIn","u","user","current","value","login","React","createRef","src","Logo","alt","lib","type","placeholder","ref","onClick","Login","onSesion","formLogin_formLogin","Nav","brand","logo","left","Menu","nav_nav","Page404","AppRoutes","components_app_App","BrowserRouter","basename","process","Switch","Route","path","component","exact","Boolean","window","location","hostname","match","render","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.cee4a852.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Content extends Component {\r\n  static PropTypes = {\r\n    body: PropTypes.object.isRequired\r\n  };\r\n  render() {\r\n\t\tconst { body } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{body} \r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default Content;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\n\r\nimport Content from '../global/content/content';\r\n\r\nclass App extends Component {\r\n  static PropTypes = {\r\n    children: PropTypes.object.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <Content body = {children}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import firebase from 'firebase'; \r\n\r\nconst firebaseCredentials = {\r\n    apiKey: \"AIzaSyCX3y_bxvA5uNk3uDX3dd7IuUFSjjaMNag\",\r\n    authDomain: \"burger-queen-df556.firebaseapp.com\",\r\n    databaseURL: \"https://burger-queen-df556.firebaseio.com\",\r\n    projectId: \"burger-queen-df556\",\r\n    storageBucket: \"burger-queen-df556.appspot.com\",\r\n    messagingSenderId: \"338081275694\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseCredentials);\r\n\r\nexport default firebase;\r\n\r\n\r\nexport const initSesion = (email, password) => {\r\n\tfirebase.auth().signInWithEmailAndPassword(email, password)\r\n\t\t.then(() => { \r\n\t\t\tconsole.log('Se ha logueado');\r\n\t\t\treturn })\r\n\t\t// .then(()=>)\r\n\t\t.catch((error) => {\r\n\t\t\t// Handle Errors here.\r\n\t\t\tconst errorCode = error.code;\r\n\t\t\tconst errorMessage = error.message;\r\n\t\t\tconsole.log(errorCode, errorMessage);\r\n\t\t});\r\n    \r\n}\r\n\r\nexport const logout = () => {\r\n\tfirebase.auth().signOut().then(() => {\r\n\t\t// Sign-out successful.\r\n\t}).catch((error) => {\r\n\t\t// An error happened.\r\n\t});\r\n}","import React, { Component } from 'react';\r\nimport {Row } from 'react-materialize';\r\nimport Logo from '../../assets/burguerB3.png';\r\nimport './formLogin.css';\r\n\r\nclass FormLogin extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.user = React.createRef();\r\n    this.password = React.createRef();\r\n\t};\r\n\r\n\t// componentWillMount = () => {\r\n  //   console.log(this.props);\r\n  // }\r\n\r\n\tsignIn = () => {\r\n\t\tconst u = {\r\n\t\t\tuser:this.user.current.value,\r\n\t\t\tpassword:this.password.current.value\r\n\t\t};\r\n\t\tthis.props.login(u.user, u.password);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { user, password } = this;\r\n\t\treturn (\r\n\t\t\t<section className='login'>\r\n\t\t\t\t<img src={Logo} className='logo' alt='logo burger' />\r\n\t\t\t\t<h2 className= 'font-title'>Burger <span className='font-queen'>Queen</span></h2>\r\n\t\t\t\t<h4 >Iniciar Sesión</h4>\r\n\t\t\t\t<Row className='form'>\r\n\t\t\t\t\t<input className=' col s12 l6 offset-l3' type='email' placeholder='Usuario' ref = {user}/>\r\n\t\t\t\t\t<input className=' col s12 l6 offset-l3' type='password' placeholder='Contraseña' ref = {password}/>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<button className='hoverable login-button yellow darken-4 waves-effect waves-light btn' onClick={this.signIn}>Entrar</button>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{/* <a>\r\n\t\t\t\t\t\t¿Olvidaste tu Contraseña?\r\n\t\t\t\t\t</a> */}\r\n\t\t\t\t</Row>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default FormLogin;","import React, {Component} from 'react';\r\nimport { initSesion } from '../../config/firebase';\r\nimport FormLogin from '../global/formLogin/formLogin';\r\n\r\nclass Login extends Component {\r\n\r\n\tonSesion = (email, password) => {\r\n\t\tinitSesion(email, password)\r\n\t\t// .then(() => console.log('si llego hasta aquí'));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section>\r\n\t\t\t\t<FormLogin login= {this.onSesion}/>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Navbar } from 'react-materialize';\r\nimport logo from '../../assets/burguer2.png';\r\n\r\nimport './nav.css';\r\n\r\nconst Nav = () => {\r\n\treturn (\r\n\t\t<header >\r\n\t\t\t<Navbar className=\"nav-header\" \r\n\t\t\tbrand={<img src={logo} className='Nav-logo' alt='logo burger' />} \r\n\t\t\tleft>\r\n\t\t\t\t<div className='nav-margin'>\r\n\t\t\t\t\t<button className='yellow darken-4 waves-effect waves-light btn-large'>Salir</button>\r\n\t\t\t\t\t<button className='nav-button yellow darken-4 waves-effect waves-light btn-large'>Desayuno</button>\r\n\t\t\t\t\t<button className='nav-button yellow darken-4 waves-effect waves-light btn-large'>Almuerzo y Cena</button>\r\n\t\t\t\t</div>\r\n\t\t\t</Navbar>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport Nav from '../global/nav/nav';\r\n\r\nconst Menu = () => {\r\n  return (\r\n\t\t<section>\r\n\t\t\t<Nav/>\r\n\t\t</section>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\n\r\nclass Page404 extends Component {\r\n  render() {\r\n    return (\r\n\t\t\t<div className=\"Pague404\">\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tPage 404\r\n\t\t\t\t</h1>\r\n\t\t</div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Page404;\r\n","import React from 'react';\r\nimport { Route, Switch,\tBrowserRouter } from 'react-router-dom';\r\n\r\n\r\nimport App from './components/app/App'; // Componente Principal\r\nimport Login from './components/Login';\r\nimport Menu from './components/menu'; \r\nimport Page404 from './components/page404';\r\n\r\nconst AppRoutes = () => {\r\n\treturn (\r\n\t<App>\r\n\t\t<BrowserRouter basename = { process.env.PUBLIC_URL }>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path = '/' component = { Login } exact />\r\n\t\t\t\t<Route path = '/menu' component = { Menu } exact />\r\n\t\t\t\t<Route component = { Page404 } />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t</App>\r\n\t)\r\n}\r\n\r\nexport default AppRoutes;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nimport AppRoutes from './routes';\r\n\r\nimport './index.css';\r\n// import App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nrender(\r\n<AppRoutes />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/burguerB3.563bde50.png\";","module.exports = __webpack_public_path__ + \"static/media/burguer2.2436c630.png\";"],"sourceRoot":""}