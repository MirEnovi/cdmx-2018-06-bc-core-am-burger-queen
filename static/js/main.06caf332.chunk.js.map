{"version":3,"sources":["components/global/content/content.js","components/app/App.js","config/firebase.js","components/global/formLogin/formLogin.js","components/Login/index.js","data/menu.js","components/global/nav/nav.js","components/global/button/button.js","components/menu/index.js","components/page404/index.js","routes.js","serviceWorker.js","index.js","components/assets/burguerB3.png","components/assets/burguerB2.png"],"names":["Content","body","this","props","react_default","a","createElement","Component","PropTypes","object","isRequired","App","children","className","content","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","initSesion","email","password","signInWithEmailAndPassword","then","res","catch","error","errorCode","code","errorMessage","message","console","log","logout","signOut","concat","FormLogin","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","signIn","u","user","current","value","login","React","createRef","src","Logo","alt","lib","type","placeholder","ref","onClick","Login","onSesion","state","uid","_this2","onAuthStateChanged","setState","Redirect","to","formLogin_formLogin","menu","Desayuno","price","Almuerzo","Nav","offSesion","brand","logo","left","Link","ButtonMenu","key","index","ClassName","Menu","componentWillMount","currentUser","componentDidMount","MenuData","map","item","nav_nav","button_button","Page404","AppRoutes","components_app_App","BrowserRouter","basename","process","Switch","Route","path","component","exact","Boolean","window","location","hostname","match","render","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.06caf332.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Content extends Component {\r\n  static PropTypes = {\r\n    body: PropTypes.object.isRequired\r\n  };\r\n  render() {\r\n\t\tconst { body } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{body} \r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default Content;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\n\r\nimport Content from '../global/content/content';\r\n\r\nclass App extends Component {\r\n  static PropTypes = {\r\n    children: PropTypes.object.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <Content body = {children}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import firebase from 'firebase'; \r\n\r\nconst firebaseCredentials = {\r\n    apiKey: \"AIzaSyCX3y_bxvA5uNk3uDX3dd7IuUFSjjaMNag\",\r\n    authDomain: \"burger-queen-df556.firebaseapp.com\",\r\n    databaseURL: \"https://burger-queen-df556.firebaseio.com\",\r\n    projectId: \"burger-queen-df556\",\r\n    storageBucket: \"burger-queen-df556.appspot.com\",\r\n    messagingSenderId: \"338081275694\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseCredentials);\r\nexport const auth = firebase.auth();\r\n// const db = firebase.firestore();\r\n\r\n\r\nexport default firebase;\r\n\r\n\r\nexport const initSesion = (email, password) => {\r\n\tauth.signInWithEmailAndPassword(email, password)\r\n\t\t.then((res) => { \r\n\t\t\t// console.log(res);\r\n\t\t\treturn })\r\n\t\t// .then(()=>)\r\n\t\t.catch((error) => {\r\n\t\t\t// Handle Errors here.\r\n\t\t\tconst errorCode = error.code;\r\n\t\t\tconst errorMessage = error.message;\r\n\t\t\tconsole.log(errorCode, errorMessage);\r\n\t\t});\r\n    \r\n}\r\n\r\n\r\n\r\nexport const logout = () => {\r\n\tauth.signOut().then(() => {\r\n\t\tconsole.log('Desconectado')\r\n\t\treturn\r\n\t})\r\n\t.catch((error) => console.log(`Error: ${error.code}: ${error.message}`));\t\r\n}","import React, { Component } from 'react';\r\nimport {Row } from 'react-materialize';\r\nimport Logo from '../../assets/burguerB3.png';\r\nimport './formLogin.css';\r\n\r\nclass FormLogin extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.user = React.createRef();\r\n    this.password = React.createRef();\r\n\t};\r\n\r\n\t// componentWillMount = () => {\r\n  //   console.log(this.props);\r\n  // }\r\n\r\n\tsignIn = () => {\r\n\t\tconst u = {\r\n\t\t\tuser:this.user.current.value,\r\n\t\t\tpassword:this.password.current.value\r\n\t\t};\r\n\t\tthis.props.login(u.user, u.password);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { user, password } = this;\r\n\t\treturn (\r\n\t\t\t<section className='login'>\r\n\t\t\t\t<img src={Logo} className='logo' alt='logo burger' />\r\n\t\t\t\t<h2 className= 'font-title'>Burger <span className='font-queen'>Queen</span></h2>\r\n\t\t\t\t<h4 >Iniciar Sesión</h4>\r\n\t\t\t\t<Row className='form'>\r\n\t\t\t\t\t<input className=' col s10 l6 offset-s1 offset-l3' type='email' placeholder='Usuario' ref = {user}/>\r\n\t\t\t\t\t<input className=' col s10 l6 offset-s1 offset-l3' type='password' placeholder='Contraseña' ref = {password}/>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<button className='hoverable yellow darken-4 waves-effect waves-light btn col s10 l6 offset-s1 offset-l3 login-button' onClick={this.signIn}>Entrar</button>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{/* <a>\r\n\t\t\t\t\t\t¿Olvidaste tu Contraseña?\r\n\t\t\t\t\t</a> */}\r\n\t\t\t\t</Row>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default FormLogin;","import React, {Component} from 'react';\r\nimport { initSesion, auth } from '../../config/firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport FormLogin from '../global/formLogin/formLogin';\r\n\r\nclass Login extends Component {\r\n\tconstructor () {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t  uid: null,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillMount () {\r\n    auth.onAuthStateChanged(user => {\r\n\t\t\tconsole.log(user.uid);\r\n      this.setState({\r\n        uid: user.uid\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n\tonSesion = (email, password) => initSesion(email, password);\r\n\r\n\trender() {\r\n\t\tconst {uid} = this.state;\r\n\t\tif(uid) {\r\n\t\treturn <Redirect to = '/menu'/>\r\n\t\t}\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<FormLogin login= {this.onSesion}/>\r\n\t\t\t\t</section>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Login;","export default [\r\n\r\n    {\r\n        \"Desayuno\": [\r\n            {\r\n                \"type\": \"Café americano\",\r\n                \"price\": \"5\"\r\n            },\r\n            {\r\n                \"type\": \"Café con leche\",\r\n                \"price\": \"7\"\r\n            },\r\n            {\r\n                \"type\": \"Sandwich de jamón y queso\",\r\n                \"price\": \"10\"\r\n            },\r\n            {\r\n                \"type\": \"Jugo natural\",\r\n                \"price\": \"7\"\r\n            }\r\n        ],\r\n        \"Almuerzo\": [\r\n            {\r\n                \"type\": \"Hamburguesa simple\",\r\n                \"price\": \"10\"\r\n            },\r\n            {\r\n                \"type\": \"Hamburguesa doble\",\r\n                \"price\": \"15\"\r\n            },\r\n            {\r\n                \"type\": \"Papas fritas\",\r\n                \"price\": \"5\"\r\n            },\r\n            {\r\n                \"type\": \"Onion rings\",\r\n                \"price\": \"5\"\r\n            },\r\n            {\r\n                \"type\": \"Agua 500ml\",\r\n                \"price\": \"5\"\r\n            },\r\n            {\r\n                \"type\": \"Agua 750ml\",\r\n                \"price\": \"7\"\r\n            },\r\n            {\r\n                \"type\": \"Refresco 500ml\",\r\n                \"price\": \"7\"\r\n            },\r\n            {\r\n                \"type\": \"Refresco 750ml\",\r\n                \"price\": \"10\"\r\n            }\r\n        ]\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport { Navbar } from 'react-materialize';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport logo from '../../assets/burguerB2.png';\r\nimport { logout } from '../../../config/firebase';\r\nimport './nav.css';\r\n\r\nclass Nav extends Component {\r\n\r\n\toffSesion = () => {\r\n\t\tlogout()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<header >\r\n\t\t\t\t<Navbar className=\"nav-header\" \r\n\t\t\t\tbrand={<img src={logo} className='Nav-logo' alt='logo burger' />} \r\n\t\t\t\tleft>\r\n\t\t\t\t\t<div className='nav-margin'>\r\n\t\t\t\t\t\t<a onClick={this.offSesion} className='yellow darken-4 waves-effect waves-light btn-large'>\r\n\t\t\t\t\t\t<Link to = '/'>Salir</Link>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a className='nav-button yellow darken-4 waves-effect waves-light btn-large'>Desayuno</a>\r\n\t\t\t\t\t\t<a className='nav-a yellow darken-4 waves-effect waves-light btn-large'>Almuerzo y Cena</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Navbar>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport {Button} from 'react-materialize';\r\n\r\nconst ButtonMenu = (props) => {\r\n    return(\r\n\t\t\t<Button key = {props.index} ClassName =' blue '>{props.type}</Button>\r\n    );\r\n}\r\n\r\nexport default ButtonMenu;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { auth } from '../../config/firebase';\r\nimport MenuData from '../../data/menu';\r\nimport Nav from '../global/nav/nav';\r\nimport ButtonMenu from '../global/button/button';\r\n\r\nclass Menu extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\tuid:null\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillMount = () => {\r\n    console.log('componentWillMount menu');\r\n    const user = auth.currentUser;\r\n    if (user) {   \r\n      this.setState({ uid:user.uid })\r\n    }\r\n\t}\r\n\t\r\n\tcomponentDidMount = () => {\r\n\t\tMenuData.map((item, index) => {\r\n\t\t\t// for (let i = 0; i>2; i++) {\r\n\t\t\t// \treturn console.log(item[i][index])\r\n\t\t\t// }\r\n\t\t\treturn (\r\n\t\t\t\tconsole.log(index)\r\n\t\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\trender () {\r\n\r\n\t\tconst { uid } = this.state;\r\n\t\tif(uid) {\r\n\t\t\treturn (\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<Nav />\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tMenuData.map((item, index) => <ButtonMenu \r\n\t\t\t\t\t\t\t\tkey = {index}\r\n\t\t\t\t\t\t\t\ttype = {item.Desayuno[index].type}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</section>\r\n\t\t\t);\r\n\t\t} return <Redirect to = '/'/>;\r\n\t}\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\n\r\nclass Page404 extends Component {\r\n  render() {\r\n    return (\r\n\t\t\t<div className=\"Pague404\">\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tPage 404\r\n\t\t\t\t</h1>\r\n\t\t</div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Page404;\r\n","import React from 'react';\r\nimport { Route, Switch,\tBrowserRouter } from 'react-router-dom';\r\n\r\n\r\nimport App from './components/app/App'; // Componente Principal\r\nimport Login from './components/Login';\r\nimport Menu from './components/menu'; \r\nimport Page404 from './components/page404';\r\n\r\nconst AppRoutes = () => {\r\n\treturn (\r\n\t<App>\r\n\t\t<BrowserRouter basename = { process.env.PUBLIC_URL }>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path = '/' component = { Login } exact />\r\n\t\t\t\t<Route path = '/menu' component = { Menu } exact />\r\n\t\t\t\t<Route component = { Page404 } />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t</App>\r\n\t)\r\n}\r\n\r\nexport default AppRoutes;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nimport AppRoutes from './routes';\r\n\r\nimport './index.css';\r\n// import App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nrender(\r\n<AppRoutes />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/burguerB3.563bde50.png\";","module.exports = __webpack_public_path__ + \"static/media/burguerB2.a4e552c5.png\";"],"sourceRoot":""}